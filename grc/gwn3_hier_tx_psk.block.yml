id: gwn3_hier_tx_psk
label: hier_tx_psk
category: '[gwn3]'

templates:
  imports: import gwn3
  make: gwn3.hier_tx_psk(${alfa}, ${samp_per_sym}, ${bits_per_sym}, ${constellation}, ${len_sym_srrc}, ${out_const_mul})

#  Make one 'parameters' list entry for every parameter you want settable from the GUI.
#     Keys include:
#     * id (makes the value accessible as \$keyname, e.g. in the make entry)
#     * label (label shown in the GUI)
#     * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
parameters:
- id: alpha
  label: Excess bandwidth
  default: 0.35
  dtype: float
- id: samp_per_sym
  label: Samples per symbol
  default: 5
  dtype: int
- id: bits_per_sym
  label: Bits per symbol
  default: 2
  dtype: int
- id: constellation
  label: Constellation points
  default: [-1-1j, -1+1j, 1+1j, 1-1j] 
  dtype: complex_vector
- id: len_sym_srrc
  label: Length in symbols of SRRC
  default: 7
  dtype: int
- id: out_const_mul
  label: Multiplicative output constant
  default: 0.4
  dtype: float

#  Make one 'inputs' list entry per input and one 'outputs' list entry per output.
#  Keys include:
#      * label (an identifier for the GUI)
#      * domain (optional - stream or message. Default is stream)
#      * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#      * vlen (optional - data stream vector length. Default is 1)
#      * optional (optional - set to 1 for optional inputs. Default is 0)
inputs:
- label: in
#  domain: ...
  dtype: byte
#  vlen: ...
#  optional: ...

outputs:
- label: out
#  domain: ...
  dtype: complex
#  vlen: ...
#  optional: ...

#  'file_format' specifies the version of the GRC yml format used in the file
#  and should usually not be changed.
file_format: 1
